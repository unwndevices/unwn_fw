name: Copy Firmware Release

on:
  repository_dispatch:
    types: [firmware-release]

permissions:
  contents: write

jobs:
  copy-release:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
          
      - name: Download Release from Private Repo
        run: |
          VERSION="${{ github.event.client_payload.version }}"
          
          # Get release info and download binaries
          curl -L -H "Authorization: Bearer ${{ secrets.PRIVATE_REPO_TOKEN }}" \
               "https://api.github.com/repos/unwndevices/unwn/releases/tags/${VERSION}" \
               > release_info.json
          
          # Extract changelog
          jq -r '.body' release_info.json > changelog.txt
          
          # Download binaries
          jq -r '.assets[].browser_download_url' release_info.json \
               | xargs -I {} curl -L -H "Authorization: Bearer ${{ secrets.PRIVATE_REPO_TOKEN }}" -O {}
               
      - name: Copy to Firmware Directory
        run: |
          VERSION="${{ github.event.client_payload.version }}"
          mkdir -p firmware/eisei/{daisy,esp32}
          
          # Copy and rename files
          cp eisei-daisy-${VERSION}.bin firmware/eisei/daisy/
          cp eisei-esp32-${VERSION}.bin firmware/eisei/esp32/
          
          # Update latest symlinks
          ln -sf eisei-daisy-${VERSION}.bin firmware/eisei/daisy/latest.bin
          ln -sf eisei-esp32-${VERSION}.bin firmware/eisei/esp32/latest.bin
          
      - name: Update releases.json
        run: |
          VERSION="${{ github.event.client_payload.version }}"
          DATE=$(date -u +%Y-%m-%d)
          
          # Simple script to update releases.json
          cat > update_releases.js << 'EOF'
          const fs = require('fs');
          const version = process.argv[2];
          const date = process.argv[3];
          
          let releases = { latest: version, releases: [] };
          if (fs.existsSync('releases.json')) {
            releases = JSON.parse(fs.readFileSync('releases.json'));
          }
          
          // Read changelog from extracted release notes
          const changelogText = fs.readFileSync('changelog.txt', 'utf8');
          const changelog = changelogText.split('\n').filter(line => line.trim());
          
          releases.latest = version;
          releases.releases.unshift({
            version,
            releaseDate: date,
            changelog,
            platforms: {
              daisy: `https://raw.githubusercontent.com/unwndevices/unwn_fw/main/firmware/eisei/daisy/eisei-daisy-${version}.bin`,
              esp32: `https://raw.githubusercontent.com/unwndevices/unwn_fw/main/firmware/eisei/esp32/eisei-esp32-${version}.bin`
            }
          });
          
          fs.writeFileSync('releases.json', JSON.stringify(releases, null, 2));
          EOF
          
          node update_releases.js "${VERSION}" "${DATE}"
          
          # Clean up temporary files
          rm -f eisei-*.bin update_releases.js release_info.json changelog.txt
          
      - name: Commit and Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Release ${{ github.event.client_payload.version }}"
          git push